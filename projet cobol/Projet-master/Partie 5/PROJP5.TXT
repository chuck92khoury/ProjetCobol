000100 IDENTIFICATION DIVISION.
000200 PROGRAM-ID. PROJP5.
000300
000400 ENVIRONMENT DIVISION.
000500 CONFIGURATION SECTION.
000600 SPECIAL-NAMES.
000700     DECIMAL-POINT IS COMMA.
000800
000900 INPUT-OUTPUT SECTION.
001000 FILE-CONTROL.
001100     SELECT FICPARTS ASSIGN TO FICPARTS.
001200 DATA DIVISION.
001300 FILE SECTION.
001400 FD FICPARTS.
001500 01 ENR-FIC PIC X(400).
001600
001700 WORKING-STORAGE SECTION.
001800     EXEC SQL INCLUDE SQLCA END-EXEC.
001900     EXEC SQL INCLUDE PARTS END-EXEC.
002000     EXEC SQL INCLUDE SUPPLIER END-EXEC.
002100     EXEC SQL INCLUDE PARTSUPP END-EXEC.
002200
002300     EXEC SQL
002400         DECLARE CPARTS CURSOR
002500         FOR
002600         SELECT PNO, PNAME
002700         FROM API15.PARTS
002800         ORDER BY PNAME
002900     END-EXEC.
003000     EXEC SQL
003100         DECLARE CSUPP CURSOR
003200         FOR
003300         SELECT SNO, SNAME
003400         FROM API15.SUPPLIER
003500         ORDER BY SNAME
003600     END-EXEC.
003700
003800 01 L-TIRET.
003900     05 FILLER PIC X VALUE SPACE.
004000     05 FILLER PIC X(91) VALUE ALL '-'.
004100 01 L-HEADER.
004200     05 FILLER  PIC X(3) VALUE ' | '.
004300     05 FILLER  PIC X(12) VALUE ALL SPACE.
004400     05 FILLER  PIC X(3) VALUE ' | '.
004500     05 PARTS-1 PIC X(12).
004600     05 FILLER  PIC X(3) VALUE ' | '.
004700     05 PARTS-2 PIC X(12).
004800     05 FILLER  PIC X(3) VALUE ' | '.
004900     05 PARTS-3 PIC X(12).
005000     05 FILLER  PIC X(3) VALUE ' | '.
005100     05 PARTS-4 PIC X(12).
005200     05 FILLER  PIC X(3) VALUE ' | '.
005300     05 PARTS-5 PIC X(12).
005400     05 FILLER  PIC X(2) VALUE ' |'.
005500 01 L-SUPPLIER.
005600     05 FILLER   PIC X(3) VALUE ' | '.
005700     05 SUPPLIER PIC X(12).
005800     05 FILLER   PIC X(3) VALUE ' | '.
005900     05 AMOUNT-1 PIC ZZZBZZZBZZZ9.
006000     05 FILLER   PIC X(3) VALUE ' | '.
006100     05 AMOUNT-2 PIC ZZZBZZZBZZZ9.
006200     05 FILLER   PIC X(3) VALUE ' | '.
006300     05 AMOUNT-3 PIC ZZZBZZZBZZZ9.
006400     05 FILLER   PIC X(3) VALUE ' | '.
006500     05 AMOUNT-4 PIC ZZZBZZZBZZZ9.
006600     05 FILLER   PIC X(3) VALUE ' | '.
006700     05 AMOUNT-5 PIC ZZZBZZZBZZZ9.
006800     05 FILLER   PIC X(2) VALUE ' |'.
006900 77 WS-ANO      PIC 9 VALUE ZERO.
007000 77 WS-VAR      PIC 9 VALUE ZERO.
007100 77 WS-I        PIC 9 VALUE ZERO.
007200 01 TAB-PARTS.
007300  05 TAB-PART OCCURS 5.
007400   10 PARTS-NAME PIC X(12).
007500   10 PARTS-NO   PIC X(2).
007600 77 NB-PARTS-COMP      PIC S9(9) COMP-3 VALUE ZERO.
007700 77 NB-PARTS           PIC 9(9) VALUE ZERO.
007800 01 TAB-PARTSUPP.
007900  05 NB-PARTS-DISP PIC ZZZBZZZBZZZ9 VALUE ZERO OCCURS 5.
008000
008100 PROCEDURE DIVISION.
008200     OPEN OUTPUT FICPARTS
008300     WRITE ENR-FIC FROM L-TIRET
008400     DISPLAY L-TIRET
008500     PERFORM AFF-PARTS
008600     WRITE ENR-FIC FROM L-TIRET
008700     DISPLAY L-TIRET
008800     PERFORM AFF-SUPPLIER
008900     PERFORM END-PROGRAM.
009000 AFF-PARTS.
009100     EXEC SQL
009200         OPEN CPARTS
009300     END-EXEC.
009400
009500     PERFORM VARYING WS-I FROM 1 BY 1 UNTIL WS-I > 5
009600         PERFORM FETCH-PARTS
009700         INITIALIZE PARTS-PNAME
009800         INITIALIZE PARTS-PNO
009900     END-PERFORM
010000     MOVE PARTS-NAME(1) TO PARTS-1
010100     MOVE PARTS-NAME(2) TO PARTS-2
010200     MOVE PARTS-NAME(3) TO PARTS-3
010300     MOVE PARTS-NAME(4) TO PARTS-4
010400     MOVE PARTS-NAME(5) TO PARTS-5
010500     WRITE ENR-FIC FROM L-HEADER
010600     DISPLAY L-HEADER
010700     EXEC SQL
010800         CLOSE CPARTS
010900     END-EXEC.
010910*-----------------------------------------------------------------
011000 AFF-SUPPLIER.
011010*-----------------------------------------------------------------
011100     EXEC SQL
011200       OPEN CSUPP
011300     END-EXEC.
011400
011500     PERFORM FETCH-SUPP
011600     PERFORM UNTIL SQLCODE NOT EQUAL ZERO
011700        MOVE SUPPLIER-SNAME-TEXT TO SUPPLIER
011710        INITIALIZE SUPPLIER-SNAME-TEXT
011800        PERFORM VARYING WS-I FROM 1 BY 1 UNTIL WS-I > 5
011900            MOVE PARTS-NO(WS-I) TO PARTS-PNO
012000            PERFORM ANALYSE-PARTSUPP
012100            MOVE NB-PARTS-COMP TO NB-PARTS-DISP(WS-I)
012200            MOVE 0 TO NB-PARTS-COMP
012300        END-PERFORM
012400        MOVE NB-PARTS-DISP(1) TO AMOUNT-1
012500        MOVE NB-PARTS-DISP(2) TO AMOUNT-2
012600        MOVE NB-PARTS-DISP(3) TO AMOUNT-3
012700        MOVE NB-PARTS-DISP(4) TO AMOUNT-4
012800        MOVE NB-PARTS-DISP(5) TO AMOUNT-5
012900        WRITE ENR-FIC FROM L-SUPPLIER
013000        WRITE ENR-FIC FROM L-TIRET
013100        DISPLAY L-SUPPLIER
013200        DISPLAY L-TIRET
013300        PERFORM FETCH-SUPP
013400     END-PERFORM.
013500
013600      EXEC SQL
013700          OPEN CSUPP
013800      END-EXEC.
013810*-----------------------------------------------------------------
013900 ANALYSE-PARTSUPP.
013910*-----------------------------------------------------------------
014000      EXEC SQL
014100          SELECT QTY
014200          INTO :NB-PARTS-COMP
014300          FROM API15.PARTSUPP
014400          WHERE PNO = :PARTS-PNO
014500          AND SNO = :SUPPLIER-SNO
014600      END-EXEC.
014700
014710*-----------------------------------------------------------------
014800 FETCH-PARTS.
014810*-----------------------------------------------------------------
014900      EXEC SQL
015000          FETCH CPARTS
015100          INTO :PARTS-PNO, :PARTS-PNAME
015200      END-EXEC
015300      MOVE PARTS-PNO TO PARTS-NO(WS-I)
015400      MOVE PARTS-PNAME-TEXT TO PARTS-NAME(WS-I)
015500      PERFORM TEST-SQLCODE.
015510*-----------------------------------------------------------------
015600 FETCH-SUPP.
015610*-----------------------------------------------------------------
015700      EXEC SQL
015800          FETCH CSUPP
015900          INTO :SUPPLIER-SNO, :SUPPLIER-SNAME
016000      END-EXEC
016100      PERFORM TEST-SQLCODE.
016200
016210*-----------------------------------------------------------------
016300 END-PROGRAM.
016310*-----------------------------------------------------------------
016400      CLOSE FICPARTS
016500      GOBACK.
016510*-----------------------------------------------------------------
016600 TEST-SQLCODE.
016610*-----------------------------------------------------------------
016700      EVALUATE TRUE
016800         WHEN SQLCODE = ZERO
016900             CONTINUE
017000         WHEN SQLCODE = -803
017100             DISPLAY 'ERREUR INSERT : DOUBLON'
017200         WHEN SQLCODE > ZERO
017300             IF SQLCODE = 100
017500                 CONTINUE
017600             ELSE
017700                 DISPLAY 'WARNING : ' SQLCODE
017710                 PERFORM ABEND-PROG
017800             END-IF
017900      END-EVALUATE.
018000
018010*-----------------------------------------------------------------
018100 ABEND-PROG.
018110*-----------------------------------------------------------------
018200     COMPUTE WS-ANO = WS-ANO / WS-VAR.
